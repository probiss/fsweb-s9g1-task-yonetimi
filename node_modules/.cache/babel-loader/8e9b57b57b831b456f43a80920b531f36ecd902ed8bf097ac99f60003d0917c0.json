{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90541\\\\Desktop\\\\git-proje\\\\fsweb-s9g1-task-yonetimi\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { nanoid } from \"nanoid\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(_ref) {\n  _s();\n  let {\n    submitFn,\n    kisiler\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    },\n    reset\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: \"\"\n    }\n  });\n  function mySubmit(data) {\n    console.log(\"data\", data);\n    submitFn({\n      ...data,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n    toast.success(data.title + \" sıradakii...\");\n    reset({\n      title: \"\",\n      description: \"\",\n      deadline: \"\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(mySubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: p,\n            name: \"people\",\n            ...register(\"people\", {\n              required: \"Lütfen en az bir kişi seçin\",\n              validate: {\n                ustLimit: agalar => agalar.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errors.people && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskHookForm, \"6tDKxxFEt5eOOInfxgOw/LJwn+s=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","nanoid","toast","TaskHookForm","submitFn","kisiler","register","handleSubmit","formState","errors","isValid","reset","mode","defaultValues","title","description","people","mySubmit","data","console","log","id","status","success","deadline","required","minLength","value","message","map","p","validate","ustLimit","agalar","length"],"sources":["C:/Users/90541/Desktop/git-proje/fsweb-s9g1-task-yonetimi/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nexport default function TaskHookForm({submitFn,kisiler}) {\r\n    const {register,handleSubmit,formState:{ errors , isValid },reset} = \r\n    useForm({\r\n    mode:\"onChange\",\r\n    defaultValues: {title:\"\", description:\"\",people:\"\" }\r\n  });\r\n\r\n  function mySubmit(data) {\r\n    console.log(\"data\",data)\r\n    submitFn({\r\n      ...data,\r\n      id:nanoid(5),\r\n      status: \"yapılacak\"\r\n    });\r\n    toast.success(data.title + \" sıradakii...\");\r\n    reset({\r\n      title: \"\",\r\n      description: \"\",\r\n      deadline: \"\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(mySubmit)} >\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          {...register(\"title\", {required:\"Task başlığı yazmalısınız\", \r\n          minLength: {\r\n            value:3,\r\n            message:\"Task başlığı en az 3 karakter olmalı\" }\r\n          })}\r\n        />\r\n        {errors.title && <p className=\"input-error\">{errors.title.message}</p>}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          rows=\"3\"\r\n          id=\"description\"\r\n          {...register(\"description\",{required:\"Task açıklaması yazmalısınız\",\r\n          minLength:{\r\n            value:10,\r\n            message:\"Task açıklaması en az 10 karakter olmalı\"\r\n          } })}\r\n        ></textarea>\r\n        {errors.description && (\r\n          <p className=\"input-error\">{errors.description.message}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\">\r\n          İnsanlar\r\n        </label>\r\n        <div>\r\n          {kisiler.map((p) => (\r\n            <label className=\"input-checkbox\" key={p}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={p}\r\n                name=\"people\"\r\n                {...register(\"people\", {\r\n                required: \"Lütfen en az bir kişi seçin\",\r\n                validate: {\r\n                  ustLimit: (agalar) =>\r\n                  agalar.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\"\r\n                }\r\n              })}\r\n              />\r\n              {p}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        {errors.people && (\r\n          <p className=\"input-error\">{errors.people.message}</p> )}\r\n        </div>\r\n      <div className=\"form-line\">\r\n        <button\r\n          className=\"submit-button\"\r\n          type=\"submit\"\r\n          disabled={!isValid}\r\n        >\r\n          Kaydet\r\n        </button>\r\n      </div>\r\n\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}